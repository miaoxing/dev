<?xml version="1.0"?>
<ruleset name="Miaoxing">
  <description>The coding standard for Miaoxing.</description>

  <file>./</file>

  <exclude-pattern type="relative">vendor/*</exclude-pattern>
  <exclude-pattern type="relative">node_modules/*</exclude-pattern>
  <exclude-pattern type="relative">storage/*</exclude-pattern>
  <exclude-pattern type="relative">docs/*</exclude-pattern>

  <!-- 依赖的插件 -->
  <exclude-pattern type="relative">plugins/*</exclude-pattern>

  <!-- 前端类库带有 PHP 文件，如 ueditor -->
  <exclude-pattern type="relative">public/libs/*</exclude-pattern>

  <arg name="colors"/>
  <arg value="sp"/>
  <arg name="encoding" value="UTF-8"/>
  <arg name="extensions" value="php"/>
  <arg name="ignore" value="src/Lib"/>

  <rule ref="Generic.Classes.DuplicateClassName"/>

  <rule ref="Generic.CodeAnalysis.EmptyStatement"/>
  <rule ref="Generic.CodeAnalysis.ForLoopWithTestFunctionCall"/>
  <rule ref="Generic.CodeAnalysis.JumbledIncrementer"/>
  <!--<rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>-->
  <rule ref="Generic.CodeAnalysis.UselessOverridingMethod"/>

  <rule ref="Generic.Commenting.Fixme"/>

  <rule ref="Generic.ControlStructures.InlineControlStructure"/>

  <!--<rule ref="Generic.Files.EndFileNewline"/> replaced by PHP-CS-Fixer eof_ending rule-->
  <rule ref="Generic.Files.LineLength"/>
  <!--<rule ref="Generic.Files.InlineHTML"/> exclude views-->
  <!--<rule ref="Generic.Files.LowercasedFilename"/> exclude classes-->
  <rule ref="Generic.Files.OneClassPerFile"/>
  <rule ref="Generic.Files.OneInterfacePerFile"/>
  <rule ref="Generic.Files.OneTraitPerFile"/>

  <!--<rule ref="Generic.Formatting.SpaceAfterCast"/> replaced by PHP-CS-Fixer spaces_cast rule-->

  <rule ref="Generic.Functions.FunctionCallArgumentSpacing"/>
  <!--<rule ref="Generic.Functions.OpeningFunctionBraceBsdAllman"/> replaced by PHP-CS-Fixer braces rule-->

  <rule ref="Generic.Metrics.NestingLevel">
    <properties>
      <property name="nestingLevel" value="4"/>
      <property name="absoluteNestingLevel" value="8"/>
    </properties>
  </rule>

  <rule ref="Generic.PHP.ForbiddenFunctions"/>

  <!-- Conflict with js template: <% %> <%= %> -->
  <rule ref="Generic.PHP.DisallowAlternativePHPTags">
    <exclude name="Generic.PHP.DisallowAlternativePHPTags.MaybeASPOpenTagFound"/>
    <exclude name="Generic.PHP.DisallowAlternativePHPTags.MaybeASPShortOpenTagFound"/>
  </rule>

  <rule ref="Generic.Strings.UnnecessaryStringConcat"/>

  <rule ref="Generic.WhiteSpace.ScopeIndent">
    <exclude-pattern>*/views/*</exclude-pattern>
  </rule>

  <rule ref="MySource.Objects.AssignThis"/>

  <rule ref="MySource.PHP.GetRequestData"/>
  <rule ref="MySource.PHP.GetRequestData.SuperglobalAccessed">
    <message>The %s super global must not be accessed directly; use $req->getXxx instead</message>
  </rule>

  <rule ref="PEAR.Formatting.MultiLineAssignment"/>

  <rule ref="PSR1"/>

  <rule ref="PSR12"/>

  <rule ref="Squiz.Commenting.BlockComment">
    <exclude name="Squiz.Commenting.BlockComment.WrongStart"/>
    <!-- Allow /* @see Xxx */ for code hint -->
    <exclude name="Squiz.Commenting.BlockComment.SingleLine"/>
  </rule>

  <rule ref="Squiz.NamingConventions.ValidVariableName">
    <exclude name="Squiz.NamingConventions.ValidVariableName.PrivateNoUnderscore"/>
  </rule>

  <rule ref="Squiz.PHP.Eval"/>
  <rule ref="Squiz.PHP.NonExecutableCode"/>

  <rule ref="Squiz.Scope.MethodScope"/>

  <rule ref="Internal.NoCodeFound">
    <severity>0</severity>
  </rule>

  <rule ref="WordPress.PHP.NoSilencedErrors.Discouraged"/>
</ruleset>
